// <auto-generated />
using System;
using LogicaAccesoDatos.BaseDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(HotelContext))]
    partial class HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Cabania", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadMaximaPersonas")
                        .HasColumnType("int");

                    b.Property<bool>("HabilitadoReservas")
                        .HasColumnType("bit");

                    b.Property<int>("NumHabitacion")
                        .HasColumnType("int");

                    b.Property<bool>("PoseeJacuzzi")
                        .HasColumnType("bit");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumHabitacion")
                        .IsUnique();

                    b.HasIndex("TipoId");

                    b.ToTable("Cabanias");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabaniaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CabaniaId");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabaniaId")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreTrabajador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CabaniaId");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Cabania", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesNegocio.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.VODescripcionCabania", "Descripcion", b1 =>
                        {
                            b1.Property<int>("CabaniaId")
                                .HasColumnType("int");

                            b1.Property<string>("Descripcion")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("CabaniaId");

                            b1.HasIndex("Descripcion");

                            b1.ToTable("Cabanias");

                            b1.WithOwner()
                                .HasForeignKey("CabaniaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.VONombreCabania", "Nombre", b1 =>
                        {
                            b1.Property<int>("CabaniaId")
                                .HasColumnType("int");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("CabaniaId");

                            b1.HasIndex("Nombre");

                            b1.ToTable("Cabanias");

                            b1.WithOwner()
                                .HasForeignKey("CabaniaId");
                        });

                    b.Navigation("Descripcion")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Foto", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesNegocio.Cabania", null)
                        .WithMany("Fotos")
                        .HasForeignKey("CabaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Mantenimiento", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesNegocio.Cabania", "Cabania")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("CabaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabania");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Tipo", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.VOCostoPorHuespedTipo", "CostoPorHuesped", b1 =>
                        {
                            b1.Property<int>("TipoId")
                                .HasColumnType("int");

                            b1.Property<double>("Costo")
                                .HasColumnType("float");

                            b1.HasKey("TipoId");

                            b1.HasIndex("Costo");

                            b1.ToTable("Tipos");

                            b1.WithOwner()
                                .HasForeignKey("TipoId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.VONombreTipo", "Nombre", b1 =>
                        {
                            b1.Property<int>("TipoId")
                                .HasColumnType("int");

                            b1.Property<string>("NombreTipo")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("TipoId");

                            b1.HasIndex("NombreTipo")
                                .IsUnique();

                            b1.ToTable("Tipos");

                            b1.WithOwner()
                                .HasForeignKey("TipoId");
                        });

                    b.Navigation("CostoPorHuesped")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Cabania", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Mantenimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
